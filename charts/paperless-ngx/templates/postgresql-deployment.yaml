{{- if .Values.postgresql.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "paperless-ngx.fullname" . }}-postgresql
  labels:
    {{- include "paperless-ngx.labels" . | nindent 4 }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "paperless-ngx.name" . }}-postgresql
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "paperless-ngx.name" . }}-postgresql
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
      containers:
        - name: postgresql
          image: "{{ .Values.postgresql.image.repository }}:{{ .Values.postgresql.image.tag }}"
          imagePullPolicy: {{ .Values.postgresql.image.pullPolicy }}
          env:
            - name: POSTGRES_DB
              value: {{ .Values.postgresql.auth.database | quote }}
            - name: POSTGRES_USER
              value: {{ .Values.postgresql.auth.username | quote }}
            - name: POSTGRES_PASSWORD
              value: {{ .Values.postgresql.auth.password | quote }}
          ports:
            - containerPort: {{ .Values.postgresql.service.port }}
              name: tcp-postgresql
          volumeMounts:
            {{- if .Values.postgresql.persistence.enabled }}
            - name: data
              mountPath: /var/lib/postgresql/data
            {{- end }}
          {{- with .Values.postgresql.resources }}
          resources:
            {{- toYaml . | nindent 12 }}
          {{- end }}
      {{- if .Values.postgresql.persistence.enabled }}
      volumes:
        - name: data
          persistentVolumeClaim:
            claimName: {{ include "paperless-ngx.claimName" (list . "postgresql" .Values.postgresql.persistence) }}
      {{- end }}
{{- end }}
